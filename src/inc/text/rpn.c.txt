#include <stdio.h>

#define SSZ 256
#define QSZ 32

typedef struct Stack {
	short data[SSZ];
	int len;
} Stack;

typedef struct Query {
	char data[QSZ];
	int len;
} Query;

/* helpers */

int
cinu(char c)
{
	return c >= '0' && c <= '9';
}

int
sinu(char *s)
{
	int i = 0;
	if(!s[0])
		return 0;
	while(s[i])
		if(!cinu(s[i++]))
			return 0;
	return 1;
}

int
sint(char *s)
{
	int i = 0, num = 0;
	while(s[i] && cinu(s[i]))
		num = num * 10 + (s[i++] - '0');
	return num;
}

int
scmp(char *a, char *b)
{
	int i = 0;
	while(a[i] == b[i])
		if(!a[i++])
			return 1;
	return 0;
}

void
init(Query *s)
{
	s->data[0] = '\0';
	s->len = 0;
}

void
append(Query *s, char c)
{
	if(s->len < QSZ)
		s->data[s->len++] = c;
	s->data[s->len] = '\0';
}

/* rpn */

void
push(Stack *s, int v)
{
	if(s->len < SSZ)
		s->data[s->len++] = v;
}

int
pop(Stack *s)
{
	return s->data[--s->len];
}

void
print(Stack *s)
{
	int i;
	for(i = 0; i < s->len; ++i)
		printf("| %d ", s->data[i]);
	printf("\n");
}

/* ops */

void
request(Stack *s, char *qd)
{
	if(!qd[0])
		print(s);
	else if(sinu(qd)) {
		if(s->len >= SSZ)
			printf("Stack overflow at: %s(%d)\n", qd, s->len);
		else
			push(s, sint(qd));
	} else if(s->len > 1) {
		if(scmp(qd, "add") || qd[0] == '+')
			push(s, pop(s) + pop(s));
		else if(scmp(qd, "sub") || qd[0] == '-')
			push(s, pop(s) - pop(s));
		else if(scmp(qd, "mul") || qd[0] == '*')
			push(s, pop(s) * pop(s));
		else if(scmp(qd, "div") || qd[0] == '/')
			push(s, pop(s) / pop(s));
		print(s);
	} else
		printf("Stack underflow at: %s(%d)\n", qd, s->len);
}

int
run(Stack *s)
{
	char c;
	Query q;
	init(&q);
	while((c = fgetc(stdin)) != EOF) {
		if(c == ' ' || c == '\n' || !c) {
			request(s, q.data);
			init(&q);
		} else
			append(&q, c);
	}
	return 0;
}

int
main()
{
	Stack s;
	s.len = 0;
	while(run(&s))
		;
	return 0;
}