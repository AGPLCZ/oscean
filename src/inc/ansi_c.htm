<h3>Compile</h3>

<p>To convert source to an executable binary one uses a compiler. My compiler of choice is <a href='https://bellard.org/tcc/' target='_blank'>tcc</a>, but generally speaking <code>gcc</code> is what most toolchains will use on <a href='linux.html'>Linux</a>.</p>

<pre>
cc -Wall -o main main.c
tcc -Wall struct.c -o struct
</pre>

<h3>Example File</h3>

<pre>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;math.h&gt;

int count = 10;

int add_together(int x, int y) {
  int result = x + y;
  return result;
}

typedef struct {
  int x;
  int y;
  int z;
} point;

void print_point(point point) {
  printf("the point is: (%d,%d,%d)\n",point.x,point.y,point.z);
}

int main(int argc, char** argv) {
  point p;
  p.x = 2;
  p.y = 3;
  p.z = 4;

  float length = sqrt(p.x * p.x + p.y * p.y);

  printf("float: %.6f\n", length);
  printf("int: %d\n", p.z);

  print_point(p);

  return 0;
}
</pre>

<h3>Include</h3>

<p>Generally, projects will include <code>.h</code> files which in turn will include their own <code>.c</code> files. The following form is used for system header files. It searches for a file named <code>file</code> in a standard list of system directories. </p>

<pre>#include &lt;file&gt;</pre>

<p>The following form is used for header files of your own program. It searches for a file named <code>folder/file.h</code> in the directory containing the current file. </p>

<pre>#include "folder/file.h"</pre>

<h3>IO</h3>

<p>One way to get input into a program or to display output from a program is to use standard input and standard output, respectively. The following two programs can be used with the unix pipe <code>./o | ./i</code></p>

<h4>o.c</h4>
<pre>
#include &lt;stdio.h&gt;

int
main()
{
  printf("(output hello)");
  return 0;
}
</pre>

<h4>i.c</h4>

<pre>
#include &lt;stdio.h&gt;

int
main()
{
  char line[256];
  if(fgets(line, 256, stdin) != NULL) {
    printf("(input: %s)\n", line);
  }
  return 0;
}
</pre>