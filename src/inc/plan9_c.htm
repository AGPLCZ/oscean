<h3>Plan 9 C Example</h3>

<pre>
#include &lt;u.h&gt;
#include &lt;libc.h&gt;

void
main(void)
{
  print("hello, world\n");
  exits(0);
}
</pre>

<h3>Compilers</h3>

<p>To convert source to an executable binary is a two-step process. First run the compiler, <code>5c</code>, on the source, say <code>file.c</code>, to generate an object file <code>file.5</code>. Then run the loader, <code>5l</code>, to generate an executable <code>5.out</code> that may be run(on an ARM machine):</p>

<pre>
2c file.c
2l file.2 # Or, 2l file file.2
2.out
</pre>

<p>The loader automatically links with whatever libraries the program needs, usually including the standard C library as defined by <code>libc.h</code>. The compiler does not generate an executable automatically; the output of the compiler must be given to the loader. Since most compilation is done under the control of mk, this is rarely an inconvenience.</p>

<table border='1'>
  <tr><td></td><td>compiler</td><td>linker</td><td></td></tr>
  <tr><td>SPARC</td><td>kc</td><td>kl</td><td>ka</td></tr>
  <tr><td>PowerPC</td><td>qc</td><td>ql</td><td>qa</td></tr>
  <tr><td>MIPS</td><td>vc</td><td>vl</td><td>va</td></tr>
  <tr><td>ARM</td><td>5c</td><td>5l</td><td>5a</td></tr>
  <tr><td>AMD64</td><td>6c</td><td>6l</td><td>6a</td></tr>
  <tr><td>Intel386</td><td>8c</td><td>8l</td><td>8a</td></tr>
  <tr><td>PowerPC64bits</td><td>9c</td><td>9l</td><td>9a</td></tr>
</table>

<h3>Plan 9 Mouse Example</h3>

<pre>
#include &lt;u.h&gt;
#include &lt;libc.h&gt;
#include &lt;draw.h&gt;
#include &lt;event.h&gt;

void 
eresized(int new) {
	if (new &&getwindow(display, Refnone) < 0)
		sysfatal("can't reattach to window");
}

void 
main(int argc, char *argv[]) {
	USED(argc, argv);

	Mouse m;
	Point prevm;
	initdraw(0,0,"Example: Mouse");
	eresized(0);
	einit(Emouse);

	/* Main loop */
	for(;;){
		m = emouse();
		if(m.buttons & 4)
			break;
		if(m.buttons & 1){
			line(screen,
				prevm.x == -1 ? m.xy : prevm,
				m.xy, Enddisc, Enddisc, 1, display->black, ZP);
			prevm = m.xy;
		}
		else{
			prevm = Pt(-1,-1);
		}
	}
}
</pre>

<h3>Plan 9 Keyboard Example</h3>

<pre>
#include &lt;u.h&gt;
#include &lt;libc.h&gt;
#include &lt;draw.h&gt;
#include &lt;event.h&gt;
#include &lt;keyboard.h&gt;

void 
eresized(int new) {
	if (new &&getwindow(display, Refnone) < 0)
		sysfatal("can't reattach to window");
}

void main(int argc, char *argv[]) {
	USED(argc, argv);

	Event ev;
	int e;
	initdraw(0,0,"Example: Keyboard");
	eresized(0);
	einit(Ekeyboard);

	/* Main loop */
	for (;;) {
  		e = event(&ev);
		if(e == Ekeyboard){
			print("key: %d\n", ev.kbdc);
			/* Break on escape */
			if(ev.kbdc == 27){
				print("Escaped\n");
				break;
			}
		}
	}
}
</pre>

<h3>Plan 9 Menu Example</h3>

<pre>
#include &lt;u.h&gt;
#include &lt;libc.h&gt;
#include &lt;draw.h&gt;
#include &lt;event.h&gt;

char *buttons[] = {"Option1", "Option2", "Option3", "Exit", 0};
Menu menu = {buttons};

void 
eresized(int new) {
	if (new &&getwindow(display, Refnone) < 0)
		sysfatal("can't reattach to window");
}

void main(int argc, char *argv[]) {
	USED(argc, argv);

	Event ev;
	int e;
	initdraw(0,0,"Example: Menu");
	eresized(0);
	einit(Emouse);

	/* Main loop */
	for (;;) {
  		e = event(&ev);
  		if ((e == Emouse) && (ev.mouse.buttons & 4)){
			if(emenuhit(3, &ev.mouse, &menu) == 0)
				print("Pressed Option 1");
			if(emenuhit(3, &ev.mouse, &menu) == 1)
				print("Pressed Option 2");
			if(emenuhit(3, &ev.mouse, &menu) == 2)
				print("Pressed Option 3");
			if(emenuhit(3, &ev.mouse, &menu) == 3)
				exits(nil);
    		}
	}
}
</pre>

<h3>Plan 9 Drawing Example</h3>

<pre>
#include &lt;u.h&gt;
#include &lt;libc.h&gt;
#include &lt;draw.h&gt;
#include &lt;event.h&gt;

void 
eresized(int new) {
	if (new &&getwindow(display, Refnone) < 0)
		sysfatal("can't reattach to window");
}

void
main(int argc, char **argv)
{
	Mouse m;
	Point o;
	int pad, size;

	initdraw(0,0,"Example: Primitives");
	eresized(0);
	einit(Emouse);

	pad = 20;
	size = 100;
	o = screen->r.min;

	draw(screen, 
		Rect(o.x+pad, o.y+pad, o.x+pad+size, o.y+pad+size), 
		display->black, nil, ZP);
	string(screen, 
		Pt(o.x+pad, o.y+pad+size), 
		display->black, ZP, display->defaultfont, "draw");

	fillellipse(screen, 
		Pt(o.x+pad+size*1.5, o.y+pad+size/2), 
		size/2,size/2, display->black, ZP);
	string(screen, 
		Pt(o.x+pad+size, o.y+pad+size), 
		display->black, ZP, display->defaultfont, "fillellipse");

	fillarc(screen, 
		Pt(o.x+pad+size*2, o.y+pad+size), 
		size, size, display->black, ZP, 0, 90);
	string(screen, 
		Pt(o.x+pad+size*2, o.y+pad+size), 
		display->black, ZP, display->defaultfont, "fillarc");

	line(screen, 
		Pt(o.x+pad, o.y+pad*2+size), 
		Pt(o.x+pad+size, o.y+pad*2+size*2), 
		Endsquare, Endsquare, 0, display->black, ZP);
	string(screen, 
		Pt(o.x+pad, o.y+pad*2+size*2), 
		display->black, ZP, display->defaultfont, "line");

	ellipse(screen, 
		Pt(o.x+pad+size*1.5, o.y+pad*2+size*1.5), 
		50, 50, 0, display->black, ZP);
	string(screen, 
		Pt(o.x+pad+size, o.y+pad*2+size*2), 
		display->black, ZP, display->defaultfont, "ellipse");

	arc(screen, 
		Pt(o.x+pad+size*2, o.y+pad*2+size*2), 
		size, size, 0, display->black, ZP, 1, 90);
	string(screen, 
		Pt(o.x+pad+size*2, o.y+pad*2+size*2), 
		display->black, ZP, display->defaultfont, "arc");

	/* Main loop */
	for(;;){
		m = emouse();
		if(m.buttons & 4)
			break;
	}
}
</pre>